services:
  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer/data:/data
    ports:
      - "{{ portainer_port }}:9000"
    networks:
      - blackoil-network
    environment:
      - TZ=Europe/Berlin
  
  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    expose:
      - "{{ node_exporter_port }}:9100"
    networks:
      - blackoil-network

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
    expose:
      - "{{ prometheus_port }}:9090"
    networks:
      - blackoil-network
  
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "{{ grafana_port }}:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin  # Setze ein sicheres Passwort!
    volumes:
      - ./grafana/provisioning/datasources/datasource.yml:/etc/grafana/provisioning/datasources/datasource.yml  # Automatische Data-Source
    networks:
      - blackoil-network
    depends_on:
      - prometheus

  postgres:
    image: postgres:15-alpine
    container_name: postgres
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      POSTGRES_DB: ai_stack
      POSTGRES_USER: ai_user
      POSTGRES_PASSWORD: ai_password_123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
    - /etc/localtime:/etc/localtime:ro
    - ./postgres/data:/var/lib/postgresql/data
    ports:
      - "{{ postgres_port }}:5432"
    networks:
      - blackoil-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai_user -d ai_stack"]
      interval: 30s
      timeout: 10s
      retries: 3

   # pgAdmin - PostgreSQL Management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: pgadmin_123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    #volumes:
    #  - ./pgadmin/data:/var/lib/pgadmin
    #  - /etc/localtime:/etc/localtime:ro
    ports:
      - "{{ pgadmin_port }}:80"
    networks:
      - blackoil-network
    depends_on:
      - postgres

  typemill:
    image: kixote/typemill
    container_name: typemill
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./typemill/settings/:/var/www/html/settings/
      - ./typemill/settings/users/:/var/www/html/settings/users/
      - ./typemill/media/:/var/www/html/media/
      - ./typemill/data/:/var/www/html/data/
      - ./typemill/cache/:/var/www/html/cache/
      - ./typemill/plugins/:/var/www/html/plugins/
      - ./typemill/content/:/var/www/html/content/
      - ./typemill/themes/:/var/www/html/themes/
    ports:
      - "{{ typemill_port }}:80"
    networks:
      - blackoil-network
    environment:
      - TZ=Europe/Berlin
      - APACHE_RUN_USER=www-data
      - APACHE_RUN_GROUP=www-data

  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all  
              capabilities: [gpu]  
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "{{ ollama_port }}:11434"
    volumes:
      - ./ollama/data:/root/.ollama
    environment:
      - OLLAMA_HOST=0.0.0.0
      - OLLAMA_KEEP_ALIVE=20m
    networks:
      - blackoil-network

  webui:
    image: ghcr.io/open-webui/open-webui:latest
    container_name: open-webui
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "{{ webui_port }}:8080"
    volumes:
      - ./webui/data:/app/backend/data
      - ./webui/presets:/app/presets 
    environment:
      - "OLLAMA_BASE_URL=http://ollama:11434"
      - "OLLAMA_DEFAULT_MODEL=gpt-oss:20b"
      - "JUPYTER_URL=http://jupyter:8888"
      - "JUPYTER_TOKEN={{ jupyter_token | default('default_password') }}"
      - "BRAVE_SEARCH_URL=https://search.brave.com/search?q=%s"
    depends_on:
      - ollama
    networks:
      - blackoil-network
  
  comfyui:
    image: mmartial/comfyui-nvidia-docker:latest
    container_name: comfyui
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all  
              capabilities: [gpu] 
    ports:
      - "{{ comfyui_port }}:8188"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./comfyui/data:/comfyui
    environment:
      - "COMFYUI_API_KEY={{ comfyui_api_key | default(default_password) }}"
      - "NVIDIA_VISIBLE_DEVICES=all"
      - "NVIDIA_DRIVER_CAPABILITIES=compute,utility"
    networks:
      - blackoil-network

  jupyter:
    image: jupyter/base-notebook:latest
    container_name: jupyter
    restart: unless-stopped
    deploy:
      resources:
        reservations:
          devices:
            - driver: nvidia
              count: all  
              capabilities: [gpu]  
    security_opt:
      - no-new-privileges:true
    ports:
      - "{{ jupyter_port }}:8888"
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ./jupyter/work:/home/jovyan/work
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN={{ jupyter_token | default('changeme') }}
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=compute,utility
    networks:
      - blackoil-network
  
  flowise:
    image: flowiseai/flowise:latest
    container_name: flowise
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "{{ flowise_port }}:3000"
    volumes:
      - ./flowise/data:/home/node/.flowise
    environment:
      - NODE_ENV=production
      - FLOWISE_API_KEY={{ flowise_api_key | default(default_password) }}
    networks:
      - blackoil-network
    depends_on:
      - ollama   # optional: if you want Flowise to reach local models

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    ports:
      - "{{ n8n_port }}:5678"
    volumes:
      - ./n8n/data:/home/node/.n8n
    environment:
      - N8N_BASIC_AUTH_ACTIVE=true
      - N8N_BASIC_AUTH_USER={{ n8n_user | default('n8n') }}
      - N8N_BASIC_AUTH_PASSWORD={{ n8n_password | default(default_password) }}
      - N8N_HOST=0.0.0.0
      - N8N_PORT=5678
      - NODE_ENV=production
    networks:
      - blackoil-network
    depends_on:
      - postgres 

networks:
  blackoil-network:
    driver: bridge